LIBRARY "SERVERCOOKIES"
  LANGUAGE SQLSCRIPT AS
 BEGIN 
 
  PUBLIC PROCEDURE "GET_APPLICATION_VARIABLE" ( 
    IN im_name NVARCHAR(30), 
	IN im_application NVARCHAR(128),
	OUT ex_svariable "PROCEDURES_TT_VARIABLE" ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	READS SQL DATA AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 ex_svariable = 
      SELECT SESSIONID, NAME, APPLICATION, EXPIRY, DATA 
 	    FROM "UTIL_SSCOOKIE"
	   WHERE NAME        = :im_name
	     AND APPLICATION = :im_application
	     and SESSIONID = ''; 
END;

PUBLIC PROCEDURE "GET_APPLICATION_VARIABLES" ( 
	IN im_application NVARCHAR(128), 
	OUT ex_svariable "PROCEDURES_TT_VARIABLE")
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
    ex_svariable = 
      SELECT SESSIONID, NAME, APPLICATION, EXPIRY, DATA 
 	    FROM "UTIL_SSCOOKIE"
	   WHERE APPLICATION = :im_application
	     and SESSIONID = ''; 
END;

PUBLIC PROCEDURE "GET_SESSION_VARIABLE" ( 
	IN im_sessionid NVARCHAR(32), 
	IN im_name NVARCHAR(30), 
	IN im_application NVARCHAR(128), 
	OUT ex_svariable "PROCEDURES_TT_VARIABLE") 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
  ex_svariable = 
      SELECT SESSIONID, NAME, APPLICATION, EXPIRY, DATA 
 	    FROM "UTIL_SSCOOKIE"
	   WHERE SESSIONID   = :im_sessionid
	     AND NAME        = :im_name
	     AND APPLICATION = :im_application; 
END;

PUBLIC PROCEDURE "GET_SESSION_VARIABLES" ( 
    IN im_sessionid NVARCHAR(32),
	IN im_application NVARCHAR(128),
	OUT ex_svariables "PROCEDURES_TT_VARIABLE") 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 ex_svariables = 
      SELECT SESSIONID, NAME, APPLICATION, EXPIRY, DATA 
 	    FROM "UTIL_SSCOOKIE"
	   WHERE SESSIONID   = :im_sessionid
	     AND APPLICATION = :im_application; 
END;

PUBLIC PROCEDURE "SET_APPLICATION_VARIABLE" ( 
	IN im_name NVARCHAR(30), 
	IN im_application NVARCHAR(128), 
	IN im_expiry TIMESTAMP, 
	IN im_data NCLOB) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER AS

BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 UPSERT "UTIL_SSCOOKIE"
      (SESSIONID, NAME, APPLICATION, EXPIRY, DATA)
	  VALUES(null, :im_name, :im_application, :im_expiry, :im_data)
	   WHERE SESSIONID   = ''
	     AND NAME        = :im_name
	     AND APPLICATION = :im_application; 
	     
	DELETE FROM "UTIL_SSCOOKIE"
	 WHERE EXPIRY <= now();  
END;

PUBLIC PROCEDURE "SET_SESSION_VARIABLE" ( 
	IN im_sessionid NVARCHAR(32), 
	IN im_name NVARCHAR(30), 
	IN im_application NVARCHAR(128), 
	IN im_expiry TIMESTAMP, 
	IN im_data NCLOB) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER AS

BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 UPSERT "UTIL_SSCOOKIE"
	  (SESSIONID, NAME, APPLICATION, EXPIRY, DATA)
	  VALUES(:im_sessionid, :IM_NAME, :im_application, :im_expiry, :im_data)
	   WHERE SESSIONID   = :im_sessionid
	     AND NAME        = :im_name
	     AND APPLICATION = :im_application; 
	     
	DELETE FROM "UTIL_SSCOOKIE"
	 WHERE EXPIRY <= now();  
END;

PUBLIC PROCEDURE "CLEAN_UP_OLD_COOKIES" ( )
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
  	DELETE FROM "UTIL_SSCOOKIE"
	 WHERE EXPIRY <= now(); 
END;

END;