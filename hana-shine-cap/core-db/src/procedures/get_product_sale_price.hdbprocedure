PROCEDURE "GET_PRODUCT_SALE_PRICE" ( 
 	IN im_productid NVARCHAR(10), 
    OUT ex_product_sale_price "PROCEDURES_TT_PRODUCT_SALE_PRICE" )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
declare lv_category nvarchar(40) := null;
declare lv_discount decimal(15,2) := 0; 
declare lv_price decimal(15,3) := 0;
declare ex_found boolean;
 
lt_product = select PRODUCTID, CATEGORY, PRICE 
                 from "MD_PRODUCTS"
                   	     where PRODUCTID = :im_productid;  
if ( :lt_product.SEARCH("PRODUCTID", :im_productid, 1) ) > 0 then
  ex_found = true;
 else
  ex_found = false;
 end if;


if ex_found <> false then





select CATEGORY into lv_category from :lt_product; 
select PRICE into lv_price from :lt_product;  
 
if :lv_category = 'NOTEBOOKS' AND :lv_price BETWEEN 10 AND 1000 then
  	 lv_discount := .20;
 
elseif :lv_category = 'NOTEBOOKS' AND :lv_price BETWEEN 1000 AND 3000 then
  	 lv_discount := .20; 
elseif :lv_category = 'HANDHELDS' AND :lv_price BETWEEN 10 AND 1000 then
   	 lv_discount := .25;
elseif :lv_category = 'HANDHELDS' AND :lv_price BETWEEN 1000 AND 3000 then
   	 lv_discount := .25;
elseif :lv_category = 'Flat screens' AND :lv_price BETWEEN 10 AND 1000 then
   	 lv_discount := .30;
elseif :lv_category = 'Flat screens' AND :lv_price BETWEEN 1000 AND 3000 then
   	 lv_discount := .30;   	 
   	 
elseif :lv_category like '%printers%' then
     lv_discount := .30;
else
     lv_discount := 0.00;  -- No discount
end if;





ex_product_sale_price = 
        select PRODUCTID, CATEGORY, PRICE,
           	 PRICE - (PRICE * :lv_discount) as "SALEPRICE"
                         from :lt_product;  

 end if;  
END
